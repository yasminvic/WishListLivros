// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WishListBooks.Models;

#nullable disable

namespace WishListBooks.Migrations
{
    [DbContext(typeof(ContextoDatabase))]
    [Migration("20230201175859_Tabelas")]
    partial class Tabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WishListBooks.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("categoriaNome");

                    b.HasKey("Id");

                    b.ToTable("categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Suspense"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fantasia"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Autoajuda"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Religião"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Astronomia"
                        });
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.ConfiguracaoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contato");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("endereco");

                    b.Property<string>("NomeSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nomeSite");

                    b.HasKey("Id");

                    b.ToTable("configuracaoSistema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contato = "3333-3333",
                            Endereco = "wishlistbooks@gmail.com",
                            NomeSite = "Wish List Books"
                        });
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoLancamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("anolancamento");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("autor");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("editora");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("livro");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnoLancamento = "2012",
                            Autor = "Kiera Cass",
                            CategoriaId = 3,
                            Editora = "Seguinte",
                            Nome = "A Seleção"
                        },
                        new
                        {
                            Id = 3,
                            AnoLancamento = "2012",
                            Autor = "Raphael Montes",
                            CategoriaId = 1,
                            Editora = "Companhia das Letras",
                            Nome = "Suicidas"
                        },
                        new
                        {
                            Id = 4,
                            AnoLancamento = "2004",
                            Autor = "Neil deGrasse Tyson",
                            CategoriaId = 6,
                            Editora = "Planeta",
                            Nome = "Origens"
                        },
                        new
                        {
                            Id = 5,
                            AnoLancamento = "2016",
                            Autor = "Raphael Montes",
                            CategoriaId = 1,
                            Editora = "Companhia das Letras",
                            Nome = "Jantar Secreto"
                        },
                        new
                        {
                            Id = 6,
                            AnoLancamento = "2014",
                            Autor = "E. Lockhart",
                            CategoriaId = 1,
                            Editora = "Seguinte",
                            Nome = "Mentirosos"
                        },
                        new
                        {
                            Id = 7,
                            AnoLancamento = "2014",
                            Autor = "Kiera Cass",
                            CategoriaId = 3,
                            Editora = "Seguinte",
                            Nome = "A Escolha"
                        },
                        new
                        {
                            Id = 8,
                            AnoLancamento = "2013",
                            Autor = "Kiera Cass",
                            CategoriaId = 3,
                            Editora = "Seguinte",
                            Nome = "A Elite"
                        },
                        new
                        {
                            Id = 9,
                            AnoLancamento = "2015",
                            Autor = "Kiera Cass",
                            CategoriaId = 3,
                            Editora = "Seguinte",
                            Nome = "A Herdeira"
                        },
                        new
                        {
                            Id = 10,
                            AnoLancamento = "2016",
                            Autor = "Kiera Cass",
                            CategoriaId = 3,
                            Editora = "Seguinte",
                            Nome = "A Coroa"
                        },
                        new
                        {
                            Id = 11,
                            AnoLancamento = "2015",
                            Autor = "Victoria Aveyard",
                            CategoriaId = 2,
                            Editora = "Seguinte",
                            Nome = "A Rainha Vermelha"
                        },
                        new
                        {
                            Id = 12,
                            AnoLancamento = "2016",
                            Autor = "Victoria Aveyard",
                            CategoriaId = 2,
                            Editora = "Seguinte",
                            Nome = "Espada de Vidro"
                        },
                        new
                        {
                            Id = 13,
                            AnoLancamento = "2017",
                            Autor = "Victoria Aveyard",
                            CategoriaId = 2,
                            Editora = "Seguinte",
                            Nome = "A Prisão do Rei"
                        },
                        new
                        {
                            Id = 14,
                            AnoLancamento = "2018",
                            Autor = "Victoria Aveyard",
                            CategoriaId = 2,
                            Editora = "Seguinte",
                            Nome = "Tempestada de Guerra"
                        },
                        new
                        {
                            Id = 15,
                            AnoLancamento = "2019",
                            Autor = "Victoria Aveyard",
                            CategoriaId = 2,
                            Editora = "Seguinte",
                            Nome = "Trono Destruído"
                        });
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.LivrosLidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Avaliacao")
                        .HasColumnType("int")
                        .HasColumnName("avaliacao");

                    b.Property<string>("Critica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("critica");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataFim");

                    b.Property<DateTime>("DataIni")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataIni");

                    b.Property<int>("LivroId")
                        .HasColumnType("int")
                        .HasColumnName("LivroId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("UserId");

                    b.ToTable("livrosLidos");
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<int>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7088),
                            Email = "ana@gmail.com",
                            Login = "ana",
                            Nome = "Ana de Souza",
                            Perfil = 1,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7124),
                            Email = "maria@gmail.com",
                            Login = "maria",
                            Nome = "Maria Clara da Silva",
                            Perfil = 1,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7126),
                            Email = "laura@gmail.com",
                            Login = "laura",
                            Nome = "Laura Muller",
                            Perfil = 2,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7127),
                            Email = "joao@gmail.com",
                            Login = "joao",
                            Nome = "João Victor Machado",
                            Perfil = 1,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7128),
                            Email = "pietro@gmail.com",
                            Login = "pietro",
                            Nome = "Pietro da Cruz",
                            Perfil = 2,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7129),
                            Email = "izabella@gmail.com",
                            Login = "izabella",
                            Nome = "Izabella Luiza de Souza",
                            Perfil = 2,
                            Senha = "123"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 2, 1, 14, 58, 59, 306, DateTimeKind.Local).AddTicks(7131),
                            Email = "antonia@gmail.com",
                            Login = "antonia",
                            Nome = "Antonia Barborsa",
                            Perfil = 2,
                            Senha = "123"
                        });
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.Livro", b =>
                {
                    b.HasOne("WishListBooks.Models.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.LivrosLidos", b =>
                {
                    b.HasOne("WishListBooks.Models.Entities.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WishListBooks.Models.Entities.User", "User")
                        .WithMany("Livros")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WishListBooks.Models.Entities.User", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
